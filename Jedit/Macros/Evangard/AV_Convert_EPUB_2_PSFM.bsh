// Converts Google Ebooks to preliminary sfm File
// Remove CSS
SearchAndReplace.setSearchString("<style type=\"text/css\">[^<]+</style>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(false);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
// Remove Leading Space
SearchAndReplace.setSearchString("^ +");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Remove Trailing Space
SearchAndReplace.setSearchString(" +$");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Remove Comment Lines
SearchAndReplace.setSearchString("<!--[^>]+>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// turn div tags with data into comments
SearchAndReplace.setSearchString("^ *<div [^>]+=([^>]+)>(.+)</div>");
SearchAndReplace.setReplaceString("\\\\rem $1 $2");
SearchAndReplace.replaceAll(view);
// Remove superfluous end tags
SearchAndReplace.setSearchString("</(p|div|body|html|head)>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// xml, doctype, head, body tags
SearchAndReplace.setSearchString("<(head|body|\\?xml [^>]+|!doctype[^>]+|!DOCTYPE[^>]+|html[^>]+)>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// remove Title tags and data 
SearchAndReplace.setSearchString("(<title|TITLE)[^>]*>([^<]*)</(title|TITLE)>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
//  Remove div tags
SearchAndReplace.setSearchString("<div [^>]+>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Remove empty anchors
SearchAndReplace.setSearchString("<a [^>]+></a>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Em Dashes
SearchAndReplace.setSearchString("&#8212;");
SearchAndReplace.setReplaceString("—");
SearchAndReplace.replaceAll(view);
// Apostrophes
SearchAndReplace.setSearchString("&#39;");
SearchAndReplace.setReplaceString("\'");
SearchAndReplace.replaceAll(view);
// Quotes
SearchAndReplace.setSearchString("&quot;");
SearchAndReplace.setReplaceString("\"");
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("&#8217;");
SearchAndReplace.setReplaceString("’");
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("&#8220;");
SearchAndReplace.setReplaceString("“");
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("&#8221;");
SearchAndReplace.setReplaceString("”");
SearchAndReplace.replaceAll(view);
// Ampersand 
SearchAndReplace.setSearchString("&amp;");
SearchAndReplace.setReplaceString("﹠");
SearchAndReplace.replaceAll(view);

// Images become comments. 
SearchAndReplace.setSearchString("<img ");
SearchAndReplace.setReplaceString("\\\\rem img");
SearchAndReplace.replaceAll(view);
// italics
SearchAndReplace.setSearchString("<span [^>]+italic[^>]+>([^<]+)</span>");
SearchAndReplace.setReplaceString("\\\\it $1\\\\it*");
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<i>([^<]*)</i>");
SearchAndReplace.setReplaceString("\\\\it $1\\\\it*");
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("\\\\it\\*\\\\it ");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Small Caps 
SearchAndReplace.setSearchString("<span [^>]+small-caps[^>]+>([^<]+)</span>");
SearchAndReplace.setReplaceString("\\\\sc $1\\\\sc*");
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("\\\\sc\\*\\\\sc ");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// centered paragraphs 
SearchAndReplace.setSearchString("<p [^>]+align:center[^>]+>");
SearchAndReplace.setReplaceString("\\\\pc ");
SearchAndReplace.replaceAll(view);

// all other paragraphs 
SearchAndReplace.setSearchString("^<p [^>]+>");
SearchAndReplace.setReplaceString("\\\\p ");
SearchAndReplace.replaceAll(view);

// span tags at line ends to spaces
SearchAndReplace.setSearchString("<span [^>]+gtxt_body[^>]+>\n");
SearchAndReplace.setReplaceString(" ");
SearchAndReplace.replaceAll(view);
// Remove span end tags
SearchAndReplace.setSearchString("</span>");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);

// non paragraph lines to space append prior line
SearchAndReplace.setSearchString("\n([^\\\\])");
SearchAndReplace.setReplaceString(" $1");
SearchAndReplace.replaceAll(view);

// --- Cleanup
// move end Tags. 
SearchAndReplace.setSearchString(" +(\\\\[^ ]+\\*)");
SearchAndReplace.setReplaceString("$1 ");
SearchAndReplace.replaceAll(view);
// Move Character Tags 
SearchAndReplace.setSearchString("(\\\\[^ ]+ ) +");
SearchAndReplace.setReplaceString(" $1");
SearchAndReplace.replaceAll(view);

// Remove multiple Spaces
SearchAndReplace.setSearchString("  +");
SearchAndReplace.setReplaceString(" ");
SearchAndReplace.replaceAll(view);
// Remove Leading Space
SearchAndReplace.setSearchString("^ +");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
// Remove Trailing Space
SearchAndReplace.setSearchString(" +$");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);
//Extra returns
SearchAndReplace.setSearchString("\n\n+");
SearchAndReplace.setReplaceString("\n");
SearchAndReplace.replaceAll(view);
// Make no-break spaces visible 
SearchAndReplace.setSearchString("&nbsp;");
SearchAndReplace.setReplaceString("~");
SearchAndReplace.replaceAll(view);
